services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
  valkey:
    container_name: "valkey"
    image: docker.io/bitnami/valkey:8.0
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - VALKEY_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - 'valkey_data:/bitnami/valkey/data'
    networks:
      - valkey_net
    restart: always
  web:
    build:
      dockerfile: build/Dockerfile
      context: .
    ports:
      - "8080:8080"
    depends_on:
      rabbitmq:
        condition: service_healthy
      valkey:
        condition: service_started
    networks:
      - rabbitmq_go_net
      - valkey_net
    restart: always
  flask:
    build:
      context: ./test
    ports:
      - "5000:5000"
    depends_on:
      - web
    networks:
      - rabbitmq_go_net
    restart: always

volumes:
  valkey_data:
    driver: local
networks:
  rabbitmq_go_net:
    driver: bridge
  valkey_net:
    driver: bridge
